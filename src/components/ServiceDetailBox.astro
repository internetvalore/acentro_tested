---
import { getLangFromUrl, useTranslations } from '../i18n/ui';

interface Props {
  title: string;
  description: string;
  icon: string;
}

const { title, description, icon } = Astro.props;
const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
---

<div class="service-detail-box animate-on-scroll">
  <div class="service-detail-icon">
    <img src={icon} alt={title}>
  </div>
  <h3>{title}</h3>
  <p>{description}</p>
</div>

<style>
  .service-detail-box {
    background-color: white;
    border-radius: 8px;
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);
    padding: 2rem;
    transition: transform 0.3s ease, box-shadow 0.3s ease;
    height: 100%;
    display: flex;
    flex-direction: column;
    align-items: center;
    text-align: center;
  }
  
  .service-detail-box:hover {
    transform: translateY(-5px);
    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
  }
  
  .service-detail-icon {
    margin-bottom: 1.5rem;
  }
  
  .service-detail-icon img {
    width: 64px;
    height: 64px;
  }
  
  .service-detail-box h3 {
    font-size: 1.25rem;
    margin-bottom: 1rem;
    color: var(--primary-color);
  }
  
  .service-detail-box p {
    color: var(--text-color);
    margin-bottom: 0;
    font-size: 0.95rem;
  }
</style>

<script>
// Add alternating animation classes to service boxes
document.addEventListener('DOMContentLoaded', () => {
  const boxes = document.querySelectorAll('.service-detail-box');
  boxes.forEach((box, index) => {
    box.classList.add(index % 2 === 0 ? 'from-left' : 'from-right');
  });
});

// Re-run for Astro view transitions
document.addEventListener('astro:page-load', () => {
  const boxes = document.querySelectorAll('.service-detail-box');
  boxes.forEach((box, index) => {
    box.classList.add(index % 2 === 0 ? 'from-left' : 'from-right');
  });
});
</script>
